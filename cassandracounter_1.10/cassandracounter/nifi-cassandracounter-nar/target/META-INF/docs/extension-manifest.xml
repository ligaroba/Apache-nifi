<extensionManifest><systemApiVersion>1.10.0</systemApiVersion><extensions><extension><name>org.apache.nifi.processors.cassandracounter.ConvertJSONToCassandraCounterSQL</name><type>PROCESSOR</type><deprecationNotice/><description>Converts a Json Flowfile to cassandra Counter table Update Statment </description><tags><tag>json</tag><tag>Canssandra Counter table</tag><tag>Update Statement</tag></tags><properties><property><name>Statement type</name><displayName>Statement type</displayName><description>Specifies the type of SQL statement to generate UPSERT </description><defaultValue></defaultValue><allowableValues><allowableValue><displayName>UPDATE</displayName><value>UPDATE</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Update Keys</name><displayName>Update Keys</displayName><description>A comma-separated list of column names that uniquely identifies a row in the database for UPSERT statements. If the Statement Type is UPDATE and this property is not set, the table's Primary Keys are used. In this case, if no Primary Key exists, the conversion to SQL will fail if Unmatched Column Behaviour is set to FAIL. This property is ignored if the Statement Type is INSERT</description><defaultValue></defaultValue><allowableValues></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Table name</name><displayName>Cassandra Table name</displayName><description>Specifies the table name to run the UPSERT statement</description><defaultValue></defaultValue><allowableValues></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Keyspace name</name><displayName>Cassandra Keyspace name</displayName><description>Specifies the Keyspace name to run the UPSERT statement, Does not support Expression language</description><defaultValue></defaultValue><allowableValues></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>table-schema-cache-size</name><displayName>Table Schema Cache Size</displayName><description>Specifies how many Table Schemas should be cached</description><defaultValue>100</defaultValue><allowableValues></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Translate Field Names</name><displayName>Translate Field Names</displayName><description>If true, the Processor will attempt to translate JSON field names into the appropriate column names for the table specified. If false, the JSON field names must match the column names exactly, or the column will not be updated</description><defaultValue>true</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Counter Columns Keys</name><displayName>Counter Columns Keys</displayName><description>A comma-separated list of column names that form part of the counter columns.</description><defaultValue></defaultValue><allowableValues></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Operator</name><displayName>Operator</displayName><description>Operrator to use for the counter e.g +/-</description><defaultValue></defaultValue><allowableValues><allowableValue><displayName>+</displayName><value>+</value><description></description></allowableValue><allowableValue><displayName>-</displayName><value>-</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>jts-quoted-identifiers</name><displayName>Quote Column Identifiers</displayName><description>Enabling this option will cause all column names to be quoted, allowing you to use reserved words as column names in your tables.</description><defaultValue>false</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Unmatched Field Behavior</name><displayName>Unmatched Field Behavior</displayName><description>If an incoming JSON element has a field that does not map to any of the database table's columns, this property specifies how to handle the situation</description><defaultValue>Ignore Unmatched columns</defaultValue><allowableValues><allowableValue><displayName>Ignore Unmatched columns</displayName><value>Ignore Unmatched columns</value><description>Any Column in the database that does not have a field in the JSON Document will be assumed as not important </description></allowableValue><allowableValue><displayName>Fail on Unmatched Columns</displayName><value>Fail on Unmatched Columns</value><description>A Flow file will fail if a column in the JSON property is not part of the database columns</description></allowableValue></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>jts-sql-param-attr-prefix</name><displayName>SQL Parameter Attribute Prefix</displayName><description>The string to be prepended to the outgoing flow file attributes, such as &lt;sql&gt;.args.1.value, where &lt;sql&gt; is replaced with the specified value</description><defaultValue>sql</defaultValue><allowableValues></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><dynamicProperties></dynamicProperties><relationships><relationship><name>sql</name><description>files that were successfully processed</description><autoTerminated>false</autoTerminated></relationship><relationship><name>failure</name><description>files that were not successfully processed</description><autoTerminated>false</autoTerminated></relationship><relationship><name>original</name><description>When a FlowFile is converted to SQL, the original JSON FlowFile is routed to this relationship</description><autoTerminated>false</autoTerminated></relationship></relationships><dynamicRelationship></dynamicRelationship><readsAttributes><readsAttribute><name></name><description></description></readsAttribute></readsAttributes><writesAttributes><writesAttribute><name>mime.type</name><description>Sets mime.type of FlowFile that is routed to 'sql' to 'text/plain'.</description></writesAttribute><writesAttribute><name>&lt;sql&gt;.table</name><description>Sets the &lt;sql&gt;.table attribute of FlowFile that is routed to 'sql' to the name of the table that is updated by the SQL statement. The prefix for this attribute ('sql', e.g.) is determined by the SQL Parameter Attribute Prefix property.</description></writesAttribute><writesAttribute><name>&lt;sql&gt;.catalog</name><description>If the Catalog name is set for this database, specifies the name of the catalog that the SQL statement will update. If no catalog is used, this attribute will not be added. The prefix for this attribute ('sql', e.g.) is determined by the SQL Parameter Attribute Prefix property.</description></writesAttribute><writesAttribute><name>fragment.identifier</name><description>All FlowFiles routed to the 'sql' relationship for the same incoming FlowFile (multiple will be output for the same incoming FlowFile if the incoming FlowFile is a JSON Array) will have the same value for the fragment.identifier attribute. This can then be used to correlate the results.</description></writesAttribute><writesAttribute><name>fragment.count</name><description>The number of SQL FlowFiles that were produced for same incoming FlowFile. This can be used in conjunction with the fragment.identifier attribute in order to know how many FlowFiles belonged to the same incoming FlowFile.</description></writesAttribute><writesAttribute><name>fragment.index</name><description>The position of this FlowFile in the list of outgoing FlowFiles that were all derived from the same incoming FlowFile. This can be used in conjunction with the fragment.identifier and fragment.count attributes to know which FlowFiles originated from the same incoming FlowFile and in what order the SQL FlowFiles were produced</description></writesAttribute><writesAttribute><name>&lt;sql&gt;.args.N.type</name><description>The output SQL statements are parametrized in order to avoid SQL Injection Attacks. The types of the Parameters to use are stored in attributes named &lt;sql&gt;.args.1.type, &lt;sql&gt;.args.2.type, &lt;sql&gt;.args.3.type, and so on. The type is a number representing a JDBC Type constant. Generally, this is useful only for software to read and interpret but is added so that a processor such as PutSQL can understand how to interpret the values. The prefix for this attribute ('sql', e.g.) is determined by the SQL Parameter Attribute Prefix property.</description></writesAttribute><writesAttribute><name>&lt;sql&gt;.args.N.value</name><description>The output SQL statements are parametrized in order to avoid SQL Injection Attacks. The values of the Parameters to use are stored in the attributes named sql.args.1.value, sql.args.2.value, sql.args.3.value, and so on. Each of these attributes has a corresponding &lt;sql&gt;.args.N.type attribute that indicates how the value should be interpreted when inserting it into the database.The prefix for this attribute ('sql', e.g.) is determined by the SQL Parameter Attribute Prefix property.</description></writesAttribute></writesAttributes><stateful></stateful><restricted></restricted><inputRequirement></inputRequirement><systemResourceConsiderations></systemResourceConsiderations><seeAlso></seeAlso></extension></extensions></extensionManifest>